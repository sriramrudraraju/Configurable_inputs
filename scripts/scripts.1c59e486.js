"use strict";!function(){angular.module("App",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngMaterial","ngMessages","ui.router","service","directives","dndLists"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/Create"),a.state("Create",{url:"/Create",templateUrl:"views/create.html",controller:"CreateCtrl"}).state("Inputs",{url:"/Inputs",templateUrl:"views/inputs.html",controller:"InputsCtrl"}).state("Modify",{url:"/Modify",templateUrl:"views/modify.html",controller:"ModifyCtrl"}).state("BasicDnD",{url:"/BasicDnD",templateUrl:"views/basicDnD.html",controller:"BasicDnDCtrl"}).state("AdvancedDnD",{url:"/AdvancedDnD",templateUrl:"views/advancedDnD.html",controller:"AdvancedDnDCtrl"}).state("ConfigurableDnD",{url:"/ConfigurableDnD",templateUrl:"views/configurableDnD.html",controller:"ConfigurableDnDCtrl"})}])}(),function(){function a(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){function e(a){return a}var f=c.customValidators;"true"==f&&(d.$validators.required=function(a){return a?!0:!1}),d.$parsers.push(e)}}}angular.module("directives",[]).directive("customValidators",a)}(),function(){function a(a,b){a.lol="lol",a.inputConfig={},toastr.options.closeMethod="fadeOut",toastr.options.closeDuration=300,toastr.options.closeEasing="swing",a.addInput=function(a){b.addVal({pattern:a.inputPattern,patternMessage:a.inputPatternMessage,name:a.inputName,type:a.inputType,classs:a.classs,required:a.requiredValue,show:a.showValue,disabled:a.disabledValue}),toastr.success("Input added to list")}}angular.module("App").controller("CreateCtrl",a),a.$inject=["$scope","inputConfigsFactory"]}(),function(){function a(a,b){a.inputFields=b.getVal(),a.$watch("inputFields",function(b,c){for(var d=0;d<b.length;d++){if(1==b[d].required&&0==b[d].show){toastr.warning("required fields need to be displayed"),a.inputFields=c;break}a.inputFields=b}},!0),a.applyChanges=function(a){b.updateVal(a)}}angular.module("App").controller("ModifyCtrl",a),a.$inject=["$scope","inputConfigsFactory"]}(),function(){function a(a,b){a.value=[],a.fields=b.getConvertedPatternVal()}angular.module("App").controller("InputsCtrl",a),a.$inject=["$scope","inputConfigsFactory"]}(),function(){function a(a,b){a.model=[{label:"Men",allowedTypes:["man"],max:4,people:[{name:"Bob",type:"man"},{name:"Charlie",type:"man"},{name:"Frank",type:"man"},{name:"Dave",type:"man"}]},{label:"Women",allowedTypes:["woman"],max:4,people:[{name:"Alice",type:"woman"},{name:"Eve",type:"woman"},{name:"Peggy",type:"woman"}]},{label:"People",allowedTypes:["man","woman"],max:6,people:[{name:"Frank",type:"man"},{name:"Mallory",type:"woman"},{name:"Alex",type:"unknown"},{name:"Oscar",type:"man"},{name:"Wendy",type:"woman"}]}],a.$watch("model",function(b){a.modelAsJson=angular.toJson(b,!0)},!0)}angular.module("App").controller("BasicDnDCtrl",a),a.$inject=["$scope","inputConfigsFactory"]}(),function(){function a(a,b){a.model=[{label:"Top",allowedTypes:["top"],max:4,people:[{name:"Bob",type:"top",placeholder:"firstname",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Charlie",type:"top",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Frank",type:"top",classs:"col-md-12",inputType:"number",required:!0,show:!0,disabled:!1},{name:"Dave",type:"top",classs:"col-md-12",inputType:"number",required:!0,show:!0,disabled:!1}]},{label:"Bottom",allowedTypes:["bottom"],max:4,people:[{name:"Alice",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Eve",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Peggy",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1}]},{label:"Add-on",allowedTypes:["top","bottom"],max:6,people:[{name:"Frank",type:"top",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Mallory",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Alex",type:"unknown",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Oscar",type:"top",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Wendy",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1}]}],a.$watch("model",function(b){a.modelAsJson=angular.toJson(b,!0)},!0)}angular.module("App").controller("AdvancedDnDCtrl",a),a.$inject=["$scope","inputConfigsFactory"]}(),function(){function a(a,b,c,d){function e(a,b){a.model=d.getConvertedPatternVal(),a.$watch("model",function(b,c){for(var d=0;d<b.length;d++)for(var e=0;e<b[d].inputs.length;e++){if(1==b[d].inputs[e].required&&0==b[d].inputs[e].show)return toastr.warning("required fields need to be displayed"),void(a.model=c);a.model=b}},!0),a.hide=function(){b.hide()},a.cancel=function(){b.cancel()},a.answer=function(a){d.updateVal(a),b.hide(a),c.reload()}}a.model=d.getConvertedPatternVal(),a.showAdvanced=function(c){b.show({controller:e,templateUrl:"dialog1.tmpl.html",parent:angular.element(document.body),targetEvent:c,clickOutsideToClose:!1}).then(function(b){a.status='You said the information was "'+b+'".'},function(){a.status="You cancelled the dialog."})},e.$inject=["$scope","$mdDialog"],a.$watch("model",function(b){a.modelAsJson=angular.toJson(b,!0)},!0)}angular.module("App").controller("ConfigurableDnDCtrl",a),a.$inject=["$scope","$mdDialog","$state","DnDinputConfigsFactory"]}(),function(){function a(a,b){function c(){var c=b.defer();return a.get("http://mocker.egen.io/users").then(function(a){c.resolve(a.data)})["catch"](function(a){c.reject(a.data)}),c.promise}var d=this;d.getUsers=c}angular.module("service",[]).service("UserService",a),a.$inject=["$http","$q"]}(),function(){function a(){function a(a){var b=c.exec(a);return b&&new RegExp(b[1],b[2])}var b=[{pattern:"/^[a-z]+$/i",patternMessage:"Only Letters",name:"first",placeholder:"firstname",classs:"col-md-12",type:"text",required:!0,show:!0,disabled:!1},{name:"second",type:"number",classs:"col-xs-6",required:!0,show:!0,disabled:!1},{name:"third",type:"number",classs:"col-xs-6",required:!1,show:!0,disabled:!1},{name:"fourth",type:"number",classs:"col-xs-6",required:!1,show:!0,disabled:!0}],c=/^\/(.+)\/([a-z0-9]*)$/;return b.getConvertedPatternVal=function(){for(var c=0;c<b.length;c++)b[c].pattern&&(b[c].pattern=a(b[c].pattern));return b},b.getVal=function(){return b},b.addVal=function(a){b.push(a)},b.updateVal=function(a){b=a},b}angular.module("service").service("inputConfigsFactory",a)}(),function(){function a(){function a(a){var b=c.exec(a);return b&&new RegExp(b[1],b[2])}var b=[{label:"Top",allowedTypes:["top"],max:4,inputs:[{name:"First-Top",type:"top",pattern:"/^[a-z]+$/i",patternMessage:"Only Letters",placeholder:"firstname",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Second-Top",type:"top",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Third-Top",type:"top",classs:"col-md-12",inputType:"number",required:!0,show:!0,disabled:!1},{name:"Fourth-Top",type:"top",classs:"col-md-12",inputType:"number",required:!0,show:!0,disabled:!1}]},{label:"Bottom",allowedTypes:["bottom"],max:4,inputs:[{name:"First-Bottom",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Second-Bottom",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Third-Bottom",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1}]},{label:"Add-on",allowedTypes:["top","bottom"],max:6,inputs:[{name:"Addon-Top",type:"top",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Addon-Bottom",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Addon-Unknown",type:"unknown",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Addon-Top",type:"top",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1},{name:"Addon-Bottom",type:"bottom",classs:"col-md-12",inputType:"text",required:!0,show:!0,disabled:!1}]}],c=/^\/(.+)\/([a-z0-9]*)$/;return b.getConvertedPatternVal=function(){for(var c=0;c<b.length;c++)for(var d=0;d<b[c].inputs.length;d++)b[c].inputs[d].pattern&&(b[c].inputs[d].pattern=a(b[c].inputs[d].pattern));return b},b.getVal=function(){return b},b.addVal=function(a){b.push(a)},b.updateVal=function(a){b=a},b}angular.module("service").service("DnDinputConfigsFactory",a)}(),angular.module("App").run(["$templateCache",function(a){a.put("views/advancedDnD.html",'<div ng-repeat="containers in model" class="advancedDemo"> <div class="dropzone"> <h3>{{containers.label}}</h3> <!--the fields that can be drag and dropped--> <ul dnd-list="containers.people" dnd-allowed-types="containers.allowedTypes" dnd-horizontal-list="true" dnd-external-sources="true" dnd-disable-if="false" class="itemlist"> <li ng-repeat="item in containers.people" dnd-draggable="item" dnd-type="item.type" dnd-moved="containers.people.splice($index, 1)" class="itemlist"> <!--switch the input fields based on input type--> <div ng-switch="item.inputType" ng-show="item.show"> <!--text type input--> <div ng-switch-when="text" class="{{item.classs}}"> <form name="form"> <div layout="row"> <md-input-container flex="100"> <label>{{item.name}}</label> <input type="{{item.inputType}}" ng-model="value[$index]" ng-required="item.required" ng-pattern="item.pattern" ng-disabled="item.disabled"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> <div ng-message="pattern">{{item.patternMessage}}</div> </div> </md-input-container> </div> </form> </div> <!--input type input--> <div ng-switch-when="number" class="{{item.classs}}"> <form name="form"> <div layout="row"> <md-input-container flex="100"> <label>{{item.name}}</label> <input type="{{item.inputType}}" ng-model="value[$index]" ng-required="item.required" ng-disabled="item.disabled"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> </div> </md-input-container> </div> </form> </div> </div> <div class="clearfix"></div> </li> <!--background shadow part for drag and drop--> <li class="dndPlaceholder"> Drop any <strong>{{containers.allowedTypes.join(\' or \')}}</strong> here </li> </ul> </div> </div> <h2>Generated Model</h2> <pre>{{modelAsJson}}</pre>'),a.put("views/basicDnD.html",'<div ng-repeat="containers in model" class="advancedDemo"> <div class="dropzone"> <h3>{{containers.label}}</h3> <!--the fields that can be drag and dropped--> <ul dnd-list="containers.people" dnd-allowed-types="containers.allowedTypes" dnd-horizontal-list="true" dnd-external-sources="true" dnd-disable-if="false" class="itemlist"> <li ng-repeat="item in containers.people" dnd-draggable="item" dnd-type="item.type" dnd-moved="containers.people.splice($index, 1); logEvent(\'Item moved\', event)"> {{item.name}} <div class="clearfix"></div> </li> </ul> </div> </div> <h2>Generated Model</h2> <pre>{{modelAsJson}}</pre>'),a.put("views/configurableDnD.html",'<div ng-repeat="containers in model" class="advancedDemo"> <div class="dropzone"> <h3>{{containers.label}}</h3> <!--the fields that can be drag and dropped--> <ul dnd-list="containers.inputs" dnd-allowed-types="containers.allowedTypes" dnd-horizontal-list="true" dnd-external-sources="true" dnd-disable-if="toggleDnDmode" class="itemlist"> <li ng-repeat="item in containers.inputs" dnd-draggable="item" dnd-type="item.type" dnd-moved="containers.inputs.splice($index, 1)" class="itemlist" ng-show="item.show"> <!--switch the input fields based on input type--> <div ng-switch="item.inputType"> <!--text type input--> <div ng-switch-when="text" class="{{item.classs}}"> <form name="form"> <div layout="row"> <md-input-container flex="100"> <label>{{item.name}}</label> <input type="{{item.inputType}}" ng-model="item.model" ng-required="item.required" ng-disabled="item.disabled"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> </div> </md-input-container> </div> </form> </div> <!--text type number--> <div ng-switch-when="number" class="{{item.classs}}"> <form name="form"> <div layout="row"> <md-input-container flex="100"> <label>{{item.name}}</label> <input type="{{item.inputType}}" ng-model="item.model" ng-required="item.required" ng-disabled="item.disabled"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> </div> </md-input-container> </div> </form> </div> </div> <div class="clearfix"></div> </li> <!--background shadow part for drag and drop--> <li class="dndPlaceholder"> Drop any <strong>{{containers.allowedTypes.join(\' or \')}}</strong> here </li> </ul> <!--to clear float properties--> <div class="clearfix"></div> </div> </div> <div> <!--button to toggle drag and drop mode \'ON\' and \'OFF\'--> <md-switch ng-model="switch" aria-label="Switch 1" ng-click="toggleDnDmode = switch" ng-init="toggleDnDmode = true"> Drag & Drop mode </md-switch> <md-button class="md-primary md-raised" ng-click="showAdvanced($event)"> Config Dialog </md-button> <br><br> </div> <div style="background-color: lightgoldenrodyellow" ng-show="switch"> <p>* Inputs in Top section can only be drag and dropped in Top Section or in Add-on Section</p> <p>* Similarly inputs in Bottom section can only be drag and dropped in Bottom Section or in Add-on Section</p> <p>* From Add-on section only corresponding inputs can be dropped into respective sections</p> </div> <h2>Generated Model</h2> <pre>{{modelAsJson}}</pre> <!--$dialog html--> <script type="text/ng-template" id="dialog1.tmpl.html"><md-dialog aria-label="Mango (Fruit)">\n<form ng-cloak>\n  <md-toolbar>\n    <div class="md-toolbar-tools">\n      <h2>Configure Inputs</h2>\n      <span flex></span>\n    </div>\n  </md-toolbar>\n\n  <md-dialog-content>\n    <table class="table" style="width:60vw">\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th>Display</th>\n        <th>Required</th>\n        <th>Disable</th>\n      </tr>\n      </thead>\n      <tbody ng-repeat="containers in model" class="advancedDemo">\n      <tr >\n      <th>{{containers.label}}</th>\n      </tr>\n      <tr ng-repeat="field in containers.inputs" class="advancedDemo">\n        <td scope="row">{{field.name}}</td>\n        <td>\n          <md-checkbox ng-model="field.show" aria-label="Checkbox 1"></md-checkbox>\n        </td>\n        <td>\n          <md-checkbox ng-model="field.required" aria-label="Checkbox 1"></md-checkbox>\n        </td>\n        <td>\n          <md-checkbox ng-model="field.disabled" aria-label="Checkbox 1"></md-checkbox>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </md-dialog-content>\n\n  <md-dialog-actions layout="row">\n\n    <span flex></span>\n    <md-button ng-click="answer(model)">\n      Ok\n    </md-button>\n  </md-dialog-actions>\n</form>\n</md-dialog></script>'),a.put("views/create.html",'<div class="col-md-12"> <h1>Create input field</h1> <hr> </div> <div class="col-md-12"> <div class="col-md-6"> <!--Create custom input--> <div layout="column" ng-cloak="" class="inputdemoErrors"> <md-content layout-padding=""> <form name="projectForm"> <md-input-container class="md-block"> <label>Name</label> <input required name="inputName" ng-model="inputConfig.inputName"> <div ng-messages="projectForm.inputName.$error"> <div ng-message="required">This is required.</div> </div> </md-input-container> <md-input-container class="md-block"> <label>Pattern (RegEx)</label> <input name="inputPattern" ng-model="inputConfig.inputPattern"> </md-input-container> <md-input-container class="md-block"> <label>Pattern Message</label> <input name="inputPattern" ng-model="inputConfig.inputPatternMessage"> </md-input-container> <md-input-container class="md-block"> <label>Bootstrap class</label> <md-select name="type" ng-model="inputConfig.classs" required> <md-option value="col-md-1">col-md-1</md-option> <md-option value="col-md-2">col-md-2</md-option> <md-option value="col-md-3">col-md-3</md-option> <md-option value="col-md-4">col-md-4</md-option> <md-option value="col-md-5">col-md-5</md-option> <md-option value="col-md-6">col-md-6</md-option> <md-option value="col-md-7">col-md-7</md-option> <md-option value="col-md-8">col-md-8</md-option> <md-option value="col-md-9">col-md-9</md-option> <md-option value="col-md-10">col-md-10</md-option> <md-option value="col-md-11">col-md-11</md-option> <md-option value="col-md-12">col-md-12</md-option> </md-select> </md-input-container> <div layout-wrap="" layout-gt-sm="row"> <div flex-gt-sm="50"> <md-checkbox ng-model="inputConfig.requiredValue" aria-label="Checkbox 1"> Required </md-checkbox> <span style="font-size: 0.5em;font-family: cursive">* don\'t change this after selecting input type</span> </div> </div> <div layout-wrap="" layout-gt-sm="row"> <div flex-gt-sm="50"> <md-checkbox ng-model="inputConfig.showValue" ng-init="inputConfig.showValue = true" aria-label="Checkbox 2"> Show </md-checkbox> </div> </div> <div layout-wrap="" layout-gt-sm="row"> <div flex-gt-sm="50"> <md-checkbox ng-model="inputConfig.disabledValue" aria-label="Checkbox 3"> Disabled </md-checkbox> </div> </div> <md-input-container class="md-block"> <label>Input Type</label> <md-select name="type" ng-model="inputConfig.inputType" required> <md-option value="text">Text</md-option> <md-option value="number">Number</md-option> </md-select> </md-input-container> <div> <md-button class="md-raised" ng-click="addInput(inputConfig)" ng-disabled="projectForm.$invalid">Add this input</md-button> </div> </form> </md-content> </div> </div> <div class="col-md-6"> <!--preview side--> <h2>Preview</h2> <!--switch the input fields based on input type--> <div ng-switch="inputConfig.inputType" ng-show="inputConfig.showValue"> <!--text type input--> <div ng-switch-when="text" class="{{inputConfig.classs}}"> <form name="form"> <div layout="row"> <md-input-container flex="100"> <label>{{inputConfig.inputName}}</label> <input type="{{inputConfig.inputType}}" ng-model="test" ng-required="{{ inputConfig.requiredValue }}" ng-disabled="inputConfig.disabledValue"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> </div> </md-input-container> </div> </form> </div> <!--input type input--> <div ng-switch-when="number" class="{{inputConfig.classs}}"> <form name="form" ng-show="inputConfig.showValue"> <div layout="row"> <md-input-container flex="100"> <label>{{inputConfig.inputName}}</label> <input type="{{inputConfig.inputType}}" ng-model="test" ng-required="{{ inputConfig.requiredValue }}" ng-disabled="inputConfig.disabledValue"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> </div> </md-input-container> </div> </form> </div> </div> </div> </div>'),a.put("views/inputs.html",'<div class="col-md-12"> <h1>Designed Input fields</h1> <hr> </div> <div class="col-md-12"> <div ng-repeat="field in fields"> <!--switch the input fields based on input type--> <div ng-switch="field.type" ng-show="field.show"> <!--text type input--> <div ng-switch-when="text" class="{{field.classs}}"> <form name="form"> <div layout="row"> <md-input-container flex="100"> <label>{{field.name}}</label> <input type="{{field.type}}" ng-model="value[$index]" ng-required="field.required" ng-pattern="field.pattern" ng-disabled="field.disabled"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> <div ng-message="pattern">{{field.patternMessage}}</div> </div> </md-input-container> </div> </form> </div> <!--text type number--> <div ng-switch-when="number" class="{{field.classs}}"> <form name="form"> <div layout="row"> <md-input-container flex="100"> <label>{{field.name}}</label> <input type="{{field.type}}" ng-model="value[$index]" ng-required="field.required" ng-disabled="field.disabled"> <div ng-messages="form.$error"> <div ng-message="required">This is required.</div> </div> </md-input-container> </div> </form> </div> </div> </div> </div>'),a.put("views/modify.html",'<div class="col-md-12"> <h1>Modify Input fields</h1> <hr> </div> <div class="col-md-12"> <table class="table"> <thead> <tr> <th>Name</th> <th>Display</th> <th>Required</th> <th>Disable</th> </tr> </thead> <tbody> <tr ng-repeat="field in inputFields"> <th scope="row">{{field.name}}</th> <td> <md-checkbox ng-model="field.show" aria-label="Checkbox 1"></md-checkbox> </td> <td> <md-checkbox ng-model="field.required" aria-label="Checkbox 1"></md-checkbox> </td> <td> <md-checkbox ng-model="field.disabled" aria-label="Checkbox 1"></md-checkbox> </td> </tr> </tbody> </table> <div> <md-button class="md-raised" ng-click="applyChanges(inputFields)">Apply Changes</md-button> </div> </div>')}]);